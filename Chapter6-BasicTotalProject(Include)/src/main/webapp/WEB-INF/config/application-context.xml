<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    <!-- 1. 사용자 정의 클래스 등록  -->
    <context:component-scan base-package="com.sist.*"/>
    <!-- 
          @Component, 
          @Repository, 
          @Service, 
          @Controller, 
          @RestController, 
          @ControllerAdvice, 
          @Configuration
                  패키지 단위로 등록
         1. 메모리 할당(스프링 관리하는 클래스를 선택)할 클래스 등록 
                        클래스의 종류
               1) 데이터형으로 사용하는 클래스 : 메모리 할당(X) => 프로그래머가 사용
                  ~VO , ~DTO (웹에 전송 => 관련된 데이터를 묶어서 전송)
               ======================================================
               2) 데이터베이스 연동 : 오라클 연결 (SQL=>결과값)
                  ~DAO
                  @Repository
               3) 웹 연동 : 크롤링 , XML 
                  ~Manager
                  @Component
               4) JSP와 연결 (요청처리 = 결과값 전송)
                  ~Controller
                  @Contrllor
                  @RestController
               5) 데이터베이스 여러개 통합 
                  ~Service
                  @Service
               6) 자바로 환경 설정하는 클래스 
                  ~Config
                  @Configuration
               7) 통합 예외처리   
                  ~Advice
                  @ControllerAdvice
     -->
    <!-- MVC한글 설정 -->
    <mvc:annotation-driven>
      <mvc:message-converters>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
         <property name="supportedMediaTypes">
           <list>
             <value>text/html;charset=UTF-8</value>
           </list>
         </property>
        </bean>
      </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- ViewRsolver설정 -->
    <bean id="viewResolver"
       class="org.springframework.web.servlet.view.InternalResourceViewResolver"
       p:prefix="/"
       p:suffix=".jsp"
    />
</beans>
